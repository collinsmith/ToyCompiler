State 0: V[]
I:   Sp -> . S                                        goto(S1, S)                      
     V -> . _id                                       goto(S2, _id)                    shift
     S -> . V _assignop E                             goto(S3, V)                      

State 1: V[_53] = goto(S0, _53)
I:   Sp -> S .                                        reduce(0)

State 2: V[51] = goto(S0, 51)
I:   V -> _id .                                       reduce(7)

State 3: V[_56] = goto(S0, _56)
I:   S -> V . _assignop E                             goto(S4, _assignop)              shift

State 4: V[_56, 35] = goto(S3, 35)
I:   S -> V _assignop . E                             goto(S5, E)                      
     F -> . _int                                      goto(S6, _int)                   shift
     V -> . _id                                       goto(S2, _id)                    shift
     E -> . F                                         goto(S7, F)                      
     F -> . V                                         goto(S8, V)                      
     F -> . _leftparen E _rightparen                  goto(S9, _leftparen)             shift
     E -> . E _plus F                                 goto(S5, E)                      

State 5: V[_56, 35, _54] = goto(S4, _54)
I:   S -> V _assignop E .                             reduce(1)
I:   E -> E . _plus F                                 goto(S10, _plus)                 shift

State 6: V[_56, 35, 12] = goto(S4, 12)
I:   F -> _int .                                      reduce(5)

State 7: V[_56, 35, _55] = goto(S4, _55)
I:   E -> F .                                         reduce(2)

State 8: V[_56, 35, _56] = goto(S4, _56)
I:   F -> V .                                         reduce(4)

State 9: V[_56, 35, 39] = goto(S4, 39)
I:   F -> _leftparen . E _rightparen                  goto(S11, E)                     
     F -> . _int                                      goto(S6, _int)                   shift
     V -> . _id                                       goto(S2, _id)                    shift
     E -> . F                                         goto(S7, F)                      
     F -> . V                                         goto(S8, V)                      
     F -> . _leftparen E _rightparen                  goto(S9, _leftparen)             shift
     E -> . E _plus F                                 goto(S11, E)                     

State 10: V[_56, 35, _54, 21] = goto(S5, 21)
I:   E -> E _plus . F                                 goto(S12, F)                     
     F -> . _int                                      goto(S6, _int)                   shift
     V -> . _id                                       goto(S2, _id)                    shift
     F -> . V                                         goto(S8, V)                      
     F -> . _leftparen E _rightparen                  goto(S9, _leftparen)             shift

State 11: V[_56, 35, 39, _54] = goto(S9, _54)
I:   F -> _leftparen E . _rightparen                  goto(S13, _rightparen)           shift
I:   E -> E . _plus F                                 goto(S10, _plus)                 shift

State 12: V[_56, 35, _54, 21, _55] = goto(S10, _55)
I:   E -> E _plus F .                                 reduce(3)

State 13: V[_56, 35, 39, _54, 40] = goto(S11, 40)
I:   F -> _leftparen E _rightparen .                  reduce(6)

